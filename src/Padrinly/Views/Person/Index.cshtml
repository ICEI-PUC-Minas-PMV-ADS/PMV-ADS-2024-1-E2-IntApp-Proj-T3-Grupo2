@model IEnumerable<Padrinly.Domain.Entities.Person>
@using Padrinly.Domain.Enums

@{
    ViewData["Title"] = "afilhados e responsáveis";
}

<!--Titulo da página + botão voltar-->

<div class="container">
    <div class="row">
        <div class="col">
        </div>
        <div class="col-6" id="TituloPagina">
            afilhados e responsáveis
        </div>
        <div class="col">
            <a asp-controller="Home" asp-action="Index"><button type="button" class="btnsettings">voltar</button></a>
        </div>
    </div>
</div>

<hr />

<p>
    <a asp-action="CreateStudent" class="btnsettingssmall">Criar afilhado/responsável</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsAnonimous)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstDocument)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.City)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostalCode)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsAnonimous)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstDocument)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.City)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostalCode)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btnsettingssmall">editar</a> 
                @if(item.Type == TypePerson.Student)
                {
                    <a asp-action="Details" asp-route-id="@item.IdUser" class="btnsettingssmall">Perfil</a>
                }
                <a asp-action="Delete" asp-route-id="@item.Id" class="btnsettingssmall">excluir</a>
            </td>
        </tr>
}
    </tbody>
</table>
